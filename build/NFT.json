{
  "contractName": "NFT",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "contractName",
          "type": "string"
        },
        {
          "name": "migrationId",
          "type": "string"
        }
      ],
      "name": "isMigrated",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "contractName",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "migrationId",
          "type": "string"
        }
      ],
      "name": "Migrated",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_uri",
          "type": "string"
        },
        {
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461012d578063081812fc146101bd578063095ea7b31461022a57806318160ddd1461027757806323b872dd146102a25780632f745c591461030f57806342842e0e146103705780634cd88b76146103dd5780634f558e791461048c5780634f6ccce7146104d15780636352211e1461051257806370a082311461057f5780638da5cb5b146105d657806395d89b411461062d578063a22cb465146106bd578063b88d4fde1461070c578063ba7aef43146107bf578063c0bac1a814610852578063c4d66de814610919578063c87b56dd1461095c578063e985e9c514610a02578063f2fde38b14610a7d575b600080fd5b34801561013957600080fd5b50610142610ac0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610182578082015181840152602081019050610167565b50505050905090810190601f1680156101af5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101c957600080fd5b506101e860048036038101908080359060200190929190505050610b62565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561023657600080fd5b50610275600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b9f565b005b34801561028357600080fd5b5061028c610d65565b6040518082815260200191505060405180910390f35b3480156102ae57600080fd5b5061030d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d72565b005b34801561031b57600080fd5b5061035a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e89565b6040518082815260200191505060405180910390f35b34801561037c57600080fd5b506103db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f00565b005b3480156103e957600080fd5b5061048a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610f38565b005b34801561049857600080fd5b506104b7600480360381019080803590602001909291905050506111e4565b604051808215151515815260200191505060405180910390f35b3480156104dd57600080fd5b506104fc60048036038101908080359060200190929190505050611256565b6040518082815260200191505060405180910390f35b34801561051e57600080fd5b5061053d6004803603810190808035906020019092919050505061128e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058b57600080fd5b506105c0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061130c565b6040518082815260200191505060405180910390f35b3480156105e257600080fd5b506105eb611390565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063957600080fd5b506106426113b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610682578082015181840152602081019050610667565b50505050905090810190601f1680156106af5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106c957600080fd5b5061070a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611458565b005b34801561071857600080fd5b506107bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611594565b005b3480156107cb57600080fd5b50610850600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506115d3565b005b34801561085e57600080fd5b506108ff600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611676565b604051808215151515815260200191505060405180910390f35b34801561092557600080fd5b5061095a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611761565b005b34801561096857600080fd5b5061098760048036038101908080359060200190929190505050611a5b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109c75780820151818401526020810190506109ac565b50505050905090810190601f1680156109f45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a0e57600080fd5b50610a63600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b24565b604051808215151515815260200191505060405180910390f35b348015610a8957600080fd5b50610abe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bb8565b005b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b585780601f10610b2d57610100808354040283529160200191610b58565b820191906000526020600020905b815481529060010190602001808311610b3b57829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610baa8261128e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610be757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c275750610c268133611b24565b5b1515610c3257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610c5383610b62565b73ffffffffffffffffffffffffffffffffffffffff16141580610ca35750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610d6057826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b6000600a80549050905090565b80610d7d3382611d10565b1515610d8857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610dc457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610e0057600080fd5b610e0a8483611da5565b610e148483611f0e565b610e1e8383612126565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6000610e948361130c565b82101515610ea157600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610eed57fe5b9060005260206000200154905092915050565b80610f0b3382611d10565b1515610f1657600080fd5b610f328484846020604051908101604052806000815250611594565b50505050565b6040805190810160405280600b81526020017f455243373231546f6b656e0000000000000000000000000000000000000000008152506040805190810160405280600581526020017f312e392e30000000000000000000000000000000000000000000000000000000815250610fae8282611676565b151515610fba57600080fd5b8360069080519060200190610fd0929190612ac1565b508260079080519060200190610fe7929190612ac1565b507fdd117a11c22118c9dee4b5a67ce578bc44529dce21ee0ccc439588fbb9fb4ea38282604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561104f578082015181840152602081019050611034565b50505050905090810190601f16801561107c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156110b557808201518184015260208101905061109a565b50505050905090810190601f1680156110e25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160016000836040518082805190602001908083835b60208310151561112b5780518252602082019150602081019050602083039250611106565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020826040518082805190602001908083835b602083101515611194578051825260208201915060208101905060208303925061116f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611260610d65565b8210151561126d57600080fd5b600a8281548110151561127c57fe5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561130357600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561134957600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060078054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561144e5780601f106114235761010080835404028352916020019161144e565b820191906000526020600020905b81548152906001019060200180831161143157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561149357600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b8161159f3382611d10565b15156115aa57600080fd5b6115b5858585610d72565b6115c1858585856121fd565b15156115cc57600080fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561163157600080fd5b600090505b818110156116705761164f8461164a610d65565b6123eb565b611663600161165c610d65565b0384612442565b8080600101915050611636565b50505050565b600080836040518082805190602001908083835b6020831015156116af578051825260208201915060208101905060208303925061168a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020826040518082805190602001908083835b60208310151561171857805182526020820191506020810190506020830392506116f3565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff16905092915050565b6040805190810160405280600381526020017f4e465400000000000000000000000000000000000000000000000000000000008152506040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152506117d78282611676565b1515156117e357600080fd5b6117ec83612482565b6118606040805190810160405280600881526020017f4d656d656e746f730000000000000000000000000000000000000000000000008152506040805190810160405280600481526020017f4e4d4e5400000000000000000000000000000000000000000000000000000000815250610f38565b7fdd117a11c22118c9dee4b5a67ce578bc44529dce21ee0ccc439588fbb9fb4ea38282604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156118c75780820151818401526020810190506118ac565b50505050905090810190601f1680156118f45780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561192d578082015181840152602081019050611912565b50505050905090810190601f16801561195a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160016000836040518082805190602001908083835b6020831015156119a3578051825260208201915060208101905060208303925061197e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020826040518082805190602001908083835b602083101515611a0c57805182526020820191506020810190506020830392506119e7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff021916908315150217905550505050565b6060611a66826111e4565b1515611a7157600080fd5b600c60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b185780601f10611aed57610100808354040283529160200191611b18565b820191906000526020600020905b815481529060010190602001808311611afb57829003601f168201915b50505050509050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c1457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c5057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080611d1c8361128e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d8b57508373ffffffffffffffffffffffffffffffffffffffff16611d7384610b62565b73ffffffffffffffffffffffffffffffffffffffff16145b80611d9c5750611d9b8185611b24565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16611dc58261128e565b73ffffffffffffffffffffffffffffffffffffffff16141515611de757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611f0a5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b6000806000611f1d8585612740565b60096000858152602001908152602001600020549250611f896001600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061286f90919063ffffffff16565b9150600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515611fd757fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110151561203157fe5b90600052602060002001819055506000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561208d57fe5b9060005260206000200181905550600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036120ed9190612b41565b50600060096000868152602001908152602001600020819055508260096000838152602001908152602001600020819055505050505050565b60006121328383612888565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806009600084815260200190815260200160002081905550505050565b60008061221f8573ffffffffffffffffffffffffffffffffffffffff166129e2565b151561222e57600191506123e2565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156122f05780820151818401526020810190506122d5565b50505050905090810190601f16801561231d5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561233e57600080fd5b505af1158015612352573d6000803e3d6000fd5b505050506040513d602081101561236857600080fd5b8101908080519060200190929190505050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b6123f582826129f5565b600a80549050600b600083815260200190815260200160002081905550600a8190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b61244b826111e4565b151561245657600080fd5b80600c6000848152602001908152602001600020908051906020019061247d929190612ac1565b505050565b6040805190810160405280600781526020017f4f776e61626c65000000000000000000000000000000000000000000000000008152506040805190810160405280600581526020017f312e392e300000000000000000000000000000000000000000000000000000008152506124f88282611676565b15151561250457600080fd5b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fdd117a11c22118c9dee4b5a67ce578bc44529dce21ee0ccc439588fbb9fb4ea38282604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156125ac578082015181840152602081019050612591565b50505050905090810190601f1680156125d95780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156126125780820151818401526020810190506125f7565b50505050905090810190601f16801561263f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160016000836040518082805190602001908083835b6020831015156126885780518252602082019150602081019050602083039250612663565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020826040518082805190602001908083835b6020831015156126f157805182526020820191506020810190506020830392506126cc565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff021916908315150217905550505050565b8173ffffffffffffffffffffffffffffffffffffffff166127608261128e565b73ffffffffffffffffffffffffffffffffffffffff1614151561278257600080fd5b6127d56001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461286f90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561287d57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156128f657600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061299b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612aa590919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612a3157600080fd5b612a3b8282612126565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008183019050828110151515612ab857fe5b80905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b0257805160ff1916838001178555612b30565b82800160010185558215612b30579182015b82811115612b2f578251825591602001919060010190612b14565b5b509050612b3d9190612b6d565b5090565b815481835581811115612b6857818360005260206000209182019101612b679190612b6d565b5b505050565b612b8f91905b80821115612b8b576000816000905550600101612b73565b5090565b905600a165627a7a723058202a9ff1bcc3d38eac7a892dcc8a12ff4c69fae8b84556c59bd25feeec8ed0db6b0029",
  "sourceMap": "255:822:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;255:822:0;;;;;;;",
  "deployedSourceMap": "255:822:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:68:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1377:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1377:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3605:111:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3605:111:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3021:355;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3021:355:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2621:87:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2621:87:9;;;;;;;;;;;;;;;;;;;;;;;5085:316:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5085:316:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2302:177:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2302:177:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:225:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6017:225:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1141:142:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1141:142:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2461:140:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:140:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3037::9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3037:140:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:164:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2119:164:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1764:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:142:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:20:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;307:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:72:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1543:72:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1543:72:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4001:205:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4001:205:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6929:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6929:302:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;792:283:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;792:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:140:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2504:140:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;330:163:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;330:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:133:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1808:133:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1808:133:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4515:142:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4515:142:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:174:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;949:174:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:68:9;1414:6;1435:5;1428:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:68;:::o;3605:111:7:-;3665:7;3687:14;:24;3702:8;3687:24;;;;;;;;;;;;;;;;;;;;;3680:31;;3605:111;;;:::o;3021:355::-;3082:13;3098:17;3106:8;3098:7;:17::i;:::-;3082:33;;3136:5;3129:12;;:3;:12;;;;3121:21;;;;;;;;3170:5;3156:19;;:10;:19;;;:58;;;;3179:35;3196:5;3203:10;3179:16;:35::i;:::-;3156:58;3148:67;;;;;;;;3259:1;3226:35;;:21;3238:8;3226:11;:21::i;:::-;:35;;;;:56;;;;3280:1;3265:17;;:3;:17;;;;3226:56;3222:150;;;3319:3;3292:14;:24;3307:8;3292:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3351:3;3335:30;;3344:5;3335:30;;;3356:8;3335:30;;;;;;;;;;;;;;;;;;3222:150;3021:355;;;:::o;2621:87:9:-;2665:7;2687:9;:16;;;;2680:23;;2621:87;:::o;5085:316:7:-;5172:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;;;5213:1;5196:19;;:5;:19;;;;5188:28;;;;;;;;5245:1;5230:17;;:3;:17;;;;5222:26;;;;;;;;5255:30;5269:5;5276:8;5255:13;:30::i;:::-;5291:32;5307:5;5314:8;5291:15;:32::i;:::-;5329:25;5340:3;5345:8;5329:10;:25::i;:::-;5382:3;5366:30;;5375:5;5366:30;;;5387:8;5366:30;;;;;;;;;;;;;;;;;;5085:316;;;;:::o;2302:177:9:-;2384:7;2416:17;2426:6;2416:9;:17::i;:::-;2407:6;:26;2399:35;;;;;;;;2447:11;:19;2459:6;2447:19;;;;;;;;;;;;;;;2467:6;2447:27;;;;;;;;;;;;;;;;;;2440:34;;2302:177;;;;:::o;6017:225:7:-;6132:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;;;6195:42;6212:5;6219:3;6224:8;6195:42;;;;;;;;;;;;;:16;:42::i;:::-;6017:225;;;;:::o;1141:142:9:-;1422:223:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:37;1512:12;1526:11;1501:10;:37::i;:::-;1500:38;1492:47;;;;;;;;1250:5:9;1242;:13;;;;;;;;;;;;:::i;:::-;;1271:7;1261;:17;;;;;;;;;;;;:::i;:::-;;1557:35:10;1566:12;1580:11;1557:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1557:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1557:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1598:8;1607:12;1598:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1598:22:10;;;;;;;;;;;;;;;;;;;;;1621:11;1598:35;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1598:35:10;;;;;;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1141:142:9;;;;:::o;2461:140:7:-;2516:4;2528:13;2544:10;:20;2555:8;2544:20;;;;;;;;;;;;;;;;;;;;;2528:36;;2594:1;2577:19;;:5;:19;;;;2570:26;;2461:140;;;;:::o;3037::9:-;3096:7;3128:13;:11;:13::i;:::-;3119:6;:22;3111:31;;;;;;;;3155:9;3165:6;3155:17;;;;;;;;;;;;;;;;;;3148:24;;3037:140;;;:::o;2119:164:7:-;2175:7;2190:13;2206:10;:20;2217:8;2206:20;;;;;;;;;;;;;;;;;;;;;2190:36;;2257:1;2240:19;;:5;:19;;;;2232:28;;;;;;;;2273:5;2266:12;;2119:164;;;;:::o;1764:142::-;1820:7;1861:1;1843:20;;:6;:20;;;;1835:29;;;;;;;;1877:16;:24;1894:6;1877:24;;;;;;;;;;;;;;;;1870:31;;1764:142;;;:::o;307:20:4:-;;;;;;;;;;;;;:::o;1543:72:9:-;1582:6;1603:7;1596:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1543:72;:::o;4001:205:7:-;4085:10;4078:17;;:3;:17;;;;4070:26;;;;;;;;4139:9;4102:17;:29;4120:10;4102:29;;;;;;;;;;;;;;;:34;4132:3;4102:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4186:3;4159:42;;4174:10;4159:42;;;4191:9;4159:42;;;;;;;;;;;;;;;;;;;;;;4001:205;;:::o;6929:302::-;7061:8;1520:39;1538:10;1550:8;1520:17;:39::i;:::-;1512:48;;;;;;;;7079:34;7092:5;7099:3;7104:8;7079:12;:34::i;:::-;7172:53;7197:5;7204:3;7209:8;7219:5;7172:24;:53::i;:::-;7164:62;;;;;;;;6929:302;;;;;:::o;792:283:0:-;882:9;770:5:4;;;;;;;;;;;756:19;;:10;:19;;;748:28;;;;;;;;894:1:0;882:13;;877:192;901:9;897:1;:13;877:192;;;931:49;949:3;954:25;:23;:25::i;:::-;931:17;:49::i;:::-;994:61;1046:1;1020:25;:23;:25::i;:::-;:27;1050:4;994:24;:61::i;:::-;912:3;;;;;;;877:192;;;792:283;;;;:::o;2504:140:10:-;2585:4;2604:8;2613:12;2604:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2604:22:10;;;;;;;;;;;;;;;;;;;;;2627:11;2604:35;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2604:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2597:42;;2504:140;;;;:::o;330:163:0:-;1422:223:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:37;1512:12;1526:11;1501:10;:37::i;:::-;1500:38;1492:47;;;;;;;;408:26:0;427:6;408:18;:26::i;:::-;444:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:42::i;:::-;1557:35:10;1566:12;1580:11;1557:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1557:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1557:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1598:8;1607:12;1598:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1598:22:10;;;;;;;;;;;;;;;;;;;;;1621:11;1598:35;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1598:35:10;;;;;;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;330:163:0;;;:::o;1808:133:9:-;1865:6;1887:16;1894:8;1887:6;:16::i;:::-;1879:25;;;;;;;;1917:9;:19;1927:8;1917:19;;;;;;;;;;;1910:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1808:133;;;:::o;4515:142:7:-;4597:4;4616:17;:25;4634:6;4616:25;;;;;;;;;;;;;;;:36;4642:9;4616:36;;;;;;;;;;;;;;;;;;;;;;;;;4609:43;;4515:142;;;;:::o;949:174:4:-;770:5;;;;;;;;;;;756:19;;:10;:19;;;748:28;;;;;;;;1045:1;1025:22;;:8;:22;;;;1017:31;;;;;;;;1087:8;1059:37;;1080:5;;;;;;;;;;;1059:37;;;;;;;;;;;;1110:8;1102:5;;:16;;;;;;;;;;;;;;;;;;949:174;:::o;7578:240:7:-;7664:4;7676:13;7692:17;7700:8;7692:7;:17::i;:::-;7676:33;;7734:5;7722:17;;:8;:17;;;:54;;;;7768:8;7743:33;;:21;7755:8;7743:11;:21::i;:::-;:33;;;7722:54;:91;;;;7780:33;7797:5;7804:8;7780:16;:33::i;:::-;7722:91;7715:98;;7578:240;;;;;:::o;8887:265::-;8988:6;8967:27;;:17;8975:8;8967:7;:17::i;:::-;:27;;;8959:36;;;;;;;;9041:1;9005:38;;:14;:24;9020:8;9005:24;;;;;;;;;;;;;;;;;;;;;:38;;;;9001:147;;;9088:1;9053:14;:24;9068:8;9053:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9128:1;9103:38;;9112:6;9103:38;;;9132:8;9103:38;;;;;;;;;;;;;;;;;;9001:147;8887:265;;:::o;4305:856:9:-;4423:18;4476:22;4539:17;4378:38;4400:5;4407:8;4378:21;:38::i;:::-;4444:16;:26;4461:8;4444:26;;;;;;;;;;;;4423:47;;4501:32;4531:1;4501:11;:18;4513:5;4501:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;4476:57;;4559:11;:18;4571:5;4559:18;;;;;;;;;;;;;;;4578:14;4559:34;;;;;;;;;;;;;;;;;;4539:54;;4633:9;4600:11;:18;4612:5;4600:18;;;;;;;;;;;;;;;4619:10;4600:30;;;;;;;;;;;;;;;;;:42;;;;4685:1;4648:11;:18;4660:5;4648:18;;;;;;;;;;;;;;;4667:14;4648:34;;;;;;;;;;;;;;;;;:38;;;;5047:11;:18;5059:5;5047:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5109:1;5080:16;:26;5097:8;5080:26;;;;;;;;;;;:30;;;;5146:10;5116:16;:27;5133:9;5116:27;;;;;;;;;;;:40;;;;4305:856;;;;;:::o;3800:226::-;3903:14;3866:31;3883:3;3888:8;3866:16;:31::i;:::-;3920:11;:16;3932:3;3920:16;;;;;;;;;;;;;;;:23;;;;3903:40;;3949:11;:16;3961:3;3949:16;;;;;;;;;;;;;;;3971:8;3949:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3949:31:9;;;;;;;;;;;;;;;;;;;;;;4015:6;3986:16;:26;4003:8;3986:26;;;;;;;;;;;:35;;;;3800:226;;;:::o;10623:328:7:-;10762:4;10830:13;10781:16;:3;:14;;;:16::i;:::-;10780:17;10776:49;;;10814:4;10807:11;;;;10776:49;10861:3;10846:36;;;10883:5;10890:8;10900:5;10846:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10846:60:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10846:60:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10846:60:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10846:60:7;;;;;;;;;;;;;;;;10830:76;;604:10;10930:15;;10920:25;;;:6;:25;;;;10912:34;;10623:328;;;;;;;;:::o;5427:172:9:-;5488:26;5500:3;5505:8;5488:11;:26::i;:::-;5548:9;:16;;;;5521:14;:24;5536:8;5521:24;;;;;;;;;;;:43;;;;5570:9;5585:8;5570:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5570:24:9;;;;;;;;;;;;;;;;;;;;;;5427:172;;:::o;3407:130::-;3483:16;3490:8;3483:6;:16::i;:::-;3475:25;;;;;;;;3528:4;3506:9;:19;3516:8;3506:19;;;;;;;;;;;:26;;;;;;;;;;;;:::i;:::-;;3407:130;;:::o;537:104:4:-;1422:223:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:37;1512:12;1526:11;1501:10;:37::i;:::-;1500:38;1492:47;;;;;;;;629:7:4;621:5;;:15;;;;;;;;;;;;;;;;;;1557:35:10;1566:12;1580:11;1557:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1557:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1557:35:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1598:8;1607:12;1598:22;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1598:22:10;;;;;;;;;;;;;;;;;;;;;1621:11;1598:35;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1598:35:10;;;;;;;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;537:104:4;;;:::o;9898:214:7:-;10000:5;9979:26;;:17;9987:8;9979:7;:17::i;:::-;:26;;;9971:35;;;;;;;;10038:30;10066:1;10038:16;:23;10055:5;10038:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10012:16;:23;10029:5;10012:23;;;;;;;;;;;;;;;:56;;;;10105:1;10074:10;:20;10085:8;10074:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;9898:214;;:::o;836:110:3:-;894:7;921:1;916;:6;;909:14;;;;;;940:1;936;:5;929:12;;836:110;;;;:::o;9415:204:7:-;9521:1;9489:34;;:10;:20;9500:8;9489:20;;;;;;;;;;;;;;;;;;;;;:34;;;9481:43;;;;;;;;9553:3;9530:10;:20;9541:8;9530:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9586:28;9612:1;9586:16;:21;9603:3;9586:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9562:16;:21;9579:3;9562:21;;;;;;;;;;;;;;;:52;;;;9415:204;;:::o;438:568:2:-;495:4;507:12;922:4;910:17;902:25;;1000:1;993:4;:8;986:15;;438:568;;;;:::o;8072:169:7:-;8156:1;8141:17;;:3;:17;;;;8133:26;;;;;;;;8165:25;8176:3;8181:8;8165:10;:25::i;:::-;8222:3;8201:35;;8218:1;8201:35;;;8227:8;8201:35;;;;;;;;;;;;;;;;;;8072:169;;:::o;1008:123:3:-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;255:822:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"zos-lib/contracts/migrations/Migratable.sol\";\nimport \"openzeppelin-zos/contracts/ownership/Ownable.sol\";\nimport \"openzeppelin-zos/contracts/token/ERC721/ERC721Token.sol\";\n\n\n/**\n * @title ERC721 Token to hold memories\n */\ncontract NFT is Migratable, Ownable, ERC721Token{\n    /**\n    \n     */\n    function initialize(address _owner) isInitializer(\"NFT\",\"0\") public {\n        Ownable.initialize(_owner);\n        ERC721Token.initialize(\"Mementos\", \"NMNT\");\n    }\n\n    /** \n     * @dev we set the uri on mint to prevent further changes\n     * @param _to address the beneficiary that will own the minted collectible\n     * @param _uri string URI conforming to EIP 1047: Token Metadata JSON Schema \n     * see (https://eips.ethereum.org/EIPS/eip-1047)\n     */\n    function mint(address _to, string _uri, uint256 _quantity) public onlyOwner{\n        for (uint256 i = 0; i < _quantity; i++) {\n            ERC721Token._mint(_to, ERC721Token.totalSupply());\n            ERC721Token._setTokenURI((ERC721Token.totalSupply()-1), _uri);   \n        }\n    }\n}\n",
  "sourcePath": "/Users/polaco/Prog/ethba/contracts/NFT.sol",
  "ast": {
    "absolutePath": "/Users/polaco/Prog/ethba/contracts/NFT.sol",
    "exportedSymbols": {
      "NFT": [
        79
      ]
    },
    "id": 80,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "zos-lib/contracts/migrations/Migratable.sol",
        "file": "zos-lib/contracts/migrations/Migratable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 1621,
        "src": "26:53:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-zos/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-zos/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 387,
        "src": "80:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-zos/contracts/token/ERC721/ERC721Token.sol",
        "file": "openzeppelin-zos/contracts/token/ERC721/ERC721Token.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 1525,
        "src": "139:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "Migratable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1620,
              "src": "271:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Migratable_$1620",
                "typeString": "contract Migratable"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "271:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 386,
              "src": "283:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$386",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "283:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1524,
              "src": "292:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1524",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "292:11:0"
          }
        ],
        "contractDependencies": [
          386,
          413,
          433,
          440,
          547,
          1130,
          1524,
          1620
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721 Token to hold memories",
        "fullyImplemented": true,
        "id": 79,
        "linearizedBaseContracts": [
          79,
          1524,
          1130,
          440,
          433,
          413,
          547,
          386,
          1620
        ],
        "name": "NFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "398:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "427:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "408:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$386_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 349,
                      "src": "408:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "408:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "408:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4d656d656e746f73",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "467:10:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe510f8af5c2e6605f5563f2409918430e05a6d5422acc5521df926630fafa0e",
                          "typeString": "literal_string \"Mementos\""
                        },
                        "value": "Mementos"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e4d4e54",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "479:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79ed1ad3bfdfc002f809b46d3fbb3d8962b5ca4f75a7f3b3704980e4b9fffd6f",
                          "typeString": "literal_string \"NMNT\""
                        },
                        "value": "NMNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fe510f8af5c2e6605f5563f2409918430e05a6d5422acc5521df926630fafa0e",
                          "typeString": "literal_string \"Mementos\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79ed1ad3bfdfc002f809b46d3fbb3d8962b5ca4f75a7f3b3704980e4b9fffd6f",
                          "typeString": "literal_string \"NMNT\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "ERC721Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "444:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                          "typeString": "type(contract ERC721Token)"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1202,
                      "src": "444:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "444:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "444:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4e4654",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "380:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9c4138cd0a1311e4748f70d0fe3dc55f0f5f75e0f20db731225cbc3b8914016a",
                      "typeString": "literal_string \"NFT\""
                    },
                    "value": "NFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "386:3:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                      "typeString": "literal_string \"0\""
                    },
                    "value": "0"
                  }
                ],
                "id": 17,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14,
                  "name": "isInitializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1567,
                  "src": "366:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "366:24:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "350:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "349:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "398:0:0"
            },
            "scope": 79,
            "src": "330:163:0",
            "stateMutability": "nonpayable",
            "superFunction": 349,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "867:208:0",
              "statements": [
                {
                  "body": {
                    "id": 75,
                    "nodeType": "Block",
                    "src": "917:152:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 57,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "949:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 58,
                                  "name": "ERC721Token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1524,
                                  "src": "954:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                    "typeString": "type(contract ERC721Token)"
                                  }
                                },
                                "id": 59,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1269,
                                "src": "954:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "954:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "ERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "931:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                "typeString": "type(contract ERC721Token)"
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "931:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "931:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 70,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 66,
                                        "name": "ERC721Token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1524,
                                        "src": "1020:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                          "typeString": "type(contract ERC721Token)"
                                        }
                                      },
                                      "id": 67,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalSupply",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1269,
                                      "src": "1020:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 68,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1020:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 69,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1046:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "1020:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 71,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1019:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "_uri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1050:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "ERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "994:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                "typeString": "type(contract ERC721Token)"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setTokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1308,
                            "src": "994:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "994:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "994:61:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "897:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "_quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "901:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "897:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76,
                  "initializationExpression": {
                    "assignments": [
                      45
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "882:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 47,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "894:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "882:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "912:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "912:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 53,
                    "nodeType": "ExpressionStatement",
                    "src": "912:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "877:192:0"
                }
              ]
            },
            "documentation": "@dev we set the uri on mint to prevent further changes\n@param _to address the beneficiary that will own the minted collectible\n@param _uri string URI conforming to EIP 1047: Token Metadata JSON Schema \nsee (https://eips.ethereum.org/EIPS/eip-1047)",
            "id": 78,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 42,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 41,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "858:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "858:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "806:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "819:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "name": "_quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "832:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:45:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "867:0:0"
            },
            "scope": 79,
            "src": "792:283:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 80,
        "src": "255:822:0"
      }
    ],
    "src": "0:1078:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/polaco/Prog/ethba/contracts/NFT.sol",
    "exportedSymbols": {
      "NFT": [
        79
      ]
    },
    "id": 80,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "zos-lib/contracts/migrations/Migratable.sol",
        "file": "zos-lib/contracts/migrations/Migratable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 1621,
        "src": "26:53:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-zos/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-zos/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 387,
        "src": "80:58:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-zos/contracts/token/ERC721/ERC721Token.sol",
        "file": "openzeppelin-zos/contracts/token/ERC721/ERC721Token.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 1525,
        "src": "139:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "Migratable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1620,
              "src": "271:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Migratable_$1620",
                "typeString": "contract Migratable"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "271:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 386,
              "src": "283:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$386",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "283:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1524,
              "src": "292:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$1524",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "292:11:0"
          }
        ],
        "contractDependencies": [
          386,
          413,
          433,
          440,
          547,
          1130,
          1524,
          1620
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721 Token to hold memories",
        "fullyImplemented": true,
        "id": 79,
        "linearizedBaseContracts": [
          79,
          1524,
          1130,
          440,
          433,
          413,
          547,
          386,
          1620
        ],
        "name": "NFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "398:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "427:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "408:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$386_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 349,
                      "src": "408:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "408:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "408:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4d656d656e746f73",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "467:10:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe510f8af5c2e6605f5563f2409918430e05a6d5422acc5521df926630fafa0e",
                          "typeString": "literal_string \"Mementos\""
                        },
                        "value": "Mementos"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e4d4e54",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "479:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79ed1ad3bfdfc002f809b46d3fbb3d8962b5ca4f75a7f3b3704980e4b9fffd6f",
                          "typeString": "literal_string \"NMNT\""
                        },
                        "value": "NMNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fe510f8af5c2e6605f5563f2409918430e05a6d5422acc5521df926630fafa0e",
                          "typeString": "literal_string \"Mementos\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79ed1ad3bfdfc002f809b46d3fbb3d8962b5ca4f75a7f3b3704980e4b9fffd6f",
                          "typeString": "literal_string \"NMNT\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 25,
                        "name": "ERC721Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "444:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                          "typeString": "type(contract ERC721Token)"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1202,
                      "src": "444:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "444:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "444:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4e4654",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "380:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9c4138cd0a1311e4748f70d0fe3dc55f0f5f75e0f20db731225cbc3b8914016a",
                      "typeString": "literal_string \"NFT\""
                    },
                    "value": "NFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "386:3:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                      "typeString": "literal_string \"0\""
                    },
                    "value": "0"
                  }
                ],
                "id": 17,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 14,
                  "name": "isInitializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1567,
                  "src": "366:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory,string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "366:24:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "350:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "349:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "398:0:0"
            },
            "scope": 79,
            "src": "330:163:0",
            "stateMutability": "nonpayable",
            "superFunction": 349,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "867:208:0",
              "statements": [
                {
                  "body": {
                    "id": 75,
                    "nodeType": "Block",
                    "src": "917:152:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 57,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "949:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 58,
                                  "name": "ERC721Token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1524,
                                  "src": "954:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                    "typeString": "type(contract ERC721Token)"
                                  }
                                },
                                "id": 59,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalSupply",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1269,
                                "src": "954:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "954:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "ERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "931:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                "typeString": "type(contract ERC721Token)"
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "931:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "931:49:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 70,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 66,
                                        "name": "ERC721Token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1524,
                                        "src": "1020:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                          "typeString": "type(contract ERC721Token)"
                                        }
                                      },
                                      "id": 67,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "totalSupply",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1269,
                                      "src": "1020:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 68,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1020:25:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 69,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1046:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "1020:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 71,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1019:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "_uri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "1050:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 63,
                              "name": "ERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "994:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721Token_$1524_$",
                                "typeString": "type(contract ERC721Token)"
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_setTokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1308,
                            "src": "994:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "994:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "994:61:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "897:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "_quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "901:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "897:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 76,
                  "initializationExpression": {
                    "assignments": [
                      45
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 45,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "882:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 47,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "894:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "882:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "912:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "912:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 53,
                    "nodeType": "ExpressionStatement",
                    "src": "912:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "877:192:0"
                }
              ]
            },
            "documentation": "@dev we set the uri on mint to prevent further changes\n@param _to address the beneficiary that will own the minted collectible\n@param _uri string URI conforming to EIP 1047: Token Metadata JSON Schema \nsee (https://eips.ethereum.org/EIPS/eip-1047)",
            "id": 78,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 42,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 41,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 360,
                  "src": "858:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "858:9:0"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "806:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "819:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "name": "_quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "832:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:45:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "867:0:0"
            },
            "scope": 79,
            "src": "792:283:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 80,
        "src": "255:822:0"
      }
    ],
    "src": "0:1078:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-27T00:33:20.072Z"
}